{"version":3,"sources":["../src lazy /^/.//pages.*/.md$/ groupOptions: {} namespace object","components/navTrade.jsx","components/navigation.jsx","components/footer.jsx","contentData.jsx","components/home.jsx","components/content.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","NavigationTrade","NavDropdown","title","this","props","trade","generateChallenges","tradeChallenges","data","file","name","push","Item","href","Component","Navigation","Navbar","bg","variant","sticky","Brand","Toggle","Collapse","Nav","className","generateTrades","trades","tradeNumbers","number","Footer","fixed","Text","Submission","ContentData","state","markdown","children","location","pathname","loadMarkdown","a","console","log","res","fetch","default","text","setState","catch","err","withRouter","Home","Content","exact","path","to","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","toReturn","addPUBLIC_URL","document","getElementById"],"mappings":"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","file":"static/js/main.e479da35.chunk.js","sourcesContent":["var map = {\n\t\"./pages/home2.md\": [\n\t\t67,\n\t\t4\n\t],\n\t\"./pages/speedHibernateEasy.md\": [\n\t\t68,\n\t\t5\n\t],\n\t\"./pages/speedHibernateHard.md\": [\n\t\t69,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 62;\nmodule.exports = webpackAsyncContext;","import {Component} from \"react\";\nimport {NavDropdown} from \"react-bootstrap\";\n\nexport default class NavigationTrade extends Component<{ trade: string, data: {page: string} }> {\n    render() {\n        return <NavDropdown title={\"Trade \" + this.props.trade} id={\"NavBarDropdownTrade\" + this.props.trade}>\n            {this.generateChallenges()}\n        </NavDropdown>;\n    }\n\n    generateChallenges() {\n        let tradeChallenges = [];\n        let trade = this.props.data;\n        for (let file in trade) {\n            let name = trade[file].name\n            tradeChallenges.push(<NavDropdown.Item href={''+file}>{name}</NavDropdown.Item>);\n        }\n        return tradeChallenges;\n    }\n}","import {Component} from \"react\";\nimport {Nav, Navbar} from \"react-bootstrap\";\nimport NavigationTrade from \"./navTrade\";\nimport data from \"../json/pages.json\"\n\n\nexport default class Navigation extends Component {\n    render() {\n        return <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n            <Navbar.Brand href=\"/\">ICT Swiss Skills</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"me-auto\">\n                    {this.generateTrades()}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>;\n    }\n\n    generateTrades() {\n        let trades = [];\n        let tradeNumbers = data.trades;\n        for (let number in tradeNumbers) {\n            trades.push(<NavigationTrade trade={number} data={tradeNumbers[number]}/>)\n        }\n        return trades;\n    }\n}","import {Component} from \"react\";\nimport {Navbar} from \"react-bootstrap\";\n\nexport default class Footer extends Component {\n    render() {\n        return <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" className={\"justify-content-center\"}>\n                    <Navbar.Text>Â©Bissbert</Navbar.Text>\n        </Navbar>;\n    }\n}","import {Component} from \"react\";\nimport Markdown from \"markdown-to-jsx\";\nimport {withRouter} from 'react-router-dom';\n\nclass Submission extends Component<{ location: string }> {\n    render() {\n        return null;\n    }\n}\n\n/**\n * Component that creates the markdown from its file\n */\nclass ContentData extends Component {\n\n    windowLocation\n\n    constructor(props) {\n        super(props)\n        this.state = {markdown: \"\"}\n    }\n\n\n    render() {\n        const {markdown} = this.state;\n        return <div className={\"article\"}>\n            <Markdown children={markdown}/>\n            <Submission location={this.props.location.pathname}/>\n        </div>;\n    }\n\n    //loads the page from the pages folder\n    componentWillMount() {\n        this.loadMarkdown()\n    }\n\n    async loadMarkdown() {\n        const {location} = this.props\n        try {\n            console.log(`location: ${location.pathname}`)\n            let res = await import(`./pages${location.pathname}.md`)\n            let fetched = await fetch(res.default)\n            fetched.text()\n                .then(res => this.setState({markdown: res}))\n                .catch(err => console.log(err));\n        } catch (e) {\n            this.setState({markdown: `#There is no file for the challenge with the name ***${location.pathname}***\\n\\n---\\n\\nPlease select the challenges from the Navigation`})\n        }\n    }\n}\n\nexport default withRouter(ContentData);","import {Component} from \"react\";\n\nclass Home extends Component{\n    render(){\n        return null;\n    }\n}\n\nexport default Home;","import {Component} from \"react\";\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport ContentData from \"../contentData\";\nimport {Container} from \"react-bootstrap\";\nimport Home from \"./home\";\n\nexport default class Content extends Component {\n    render() {\n        return <div id={\"content\"}>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Redirect to={\"/home\"}/>\n                </Route>\n                <Route path={\"/home\"}>\n                    <Home/>\n                </Route>\n                <Route>\n                    <Container>\n                        <ContentData/>\n                    </Container>\n                </Route>\n            </Switch>\n        </div>;\n    }\n}","import './App.css';\nimport Navigation from \"./components/navigation\";\nimport Footer from \"./components/footer\";\nimport Content from \"./components/content\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Navigation/>\n            <Content/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\n\nlet isProd = true;\n\nfunction addPUBLIC_URL() {\n    let toReturn = (isProd ? process.env.PUBLIC_URL : '') + '/ict_swissskills_challenge_2';\n    console.log(toReturn);\n    return toReturn;\n}\n\nReactDOM.render(\n    <BrowserRouter basename={addPUBLIC_URL()}>\n        <App/>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}